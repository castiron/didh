<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Debates in the Digital Humanities 2016</title>
    <link rel="stylesheet" type="text/css" href="ump6.css"/>
    <meta http-equiv="content-type" content="text/xml; charset=utf-8"/>
  </head>
  <body>
    <div id="ch05" class="chapter">
      <h1 class="cn"><a id="p50" class="page"></a><a class="xref" href="ump-golddebates2016-0005.xhtml#toc">5</a></h1>
      <h1 class="ct"><a class="page"></a>QueerOS: A User’s Manual</h1>
      <p class="au">Fiona Barnett, Zach Blas, Micha Cárdenas, Jacob Gaboury, Jessica Marie Johnson, and Margaret Rhee</p>
      <p class="pf"><span class="dropcap">I</span>n 2014, <i>Cinema Journal</i> published a special “In Focus” issue on “Queer Approaches to Film, Television, and Digital Media” that included queer theorist Kara Keeling’s preliminary articulation of a “QueerOS,” a “scholarly and political project” that “makes this formulation of <i>queer</i> function as an operating system” (Keeling, 153). Drawing on Tara McPherson’s analysis of operating systems as both technical and cultural structures (“U.S. Operating Systems,” 21–37), Keeling posits a QueerOS that employs ontologies of new media with queer theory and other theoretical fields that address a spectrum of difference such as race and class. For Keeling, a QueerOS would make it impossible to think of phenomena of identitarian difference as separate from information technologies. As Keeling articulates this conception, she generously summarizes interventions that have been made in the work of bringing together information technologies, sexuality, and other forms of difference. Yet a QueerOS remains a largely speculative project, a challenge set forth by Keeling to those who have begun to think these worlds together.</p>
      <p>In the spirit of a queer commons and as queer/trans scholars and artists of color invested in the digital humanities, we take up Keeling’s challenge. However, our OS doesn’t come in the form of GNU/Linux’s man pages with detailed descriptions of switches, pipes, and flags. Instead, we have borrowed the language of popular software to present an accessible introduction, a User’s Manual to a new operating system, with each component given a poetic and theoretical description of its features and limitations.<a id="en48r" class="enref" href="ump-golddebates2016-0012.xhtml#en48">1</a> To construct this OS, we have drawn from the work of an array of scholars, activists, and artists from across cultural studies, ethnic studies, media studies, and the digital humanities. We invoke thinkers and cultural workers such as Jasbir Puar, Lauren Berlant, Octavia Butler, Moya Bailey, Viviane Namaste, Martin Manalansan, José Esteban Muñoz, Juana Maria Rodriguez, Alexis Lothian, Alexis Pauline Gumbs, and Hortense Spillers, among others. We likewise look to the transgressive, theoretical, political, and aesthetic practices made possible through <a id="p51" class="page"></a>the activism of groups such as Queer Nation and ACT UP, and we see a kinship in the work of black feminist and radical womyn of color digital media-makers, and in the agitation of queer and transgender activists of color organizing in grassroots movements such as #blacklivesmatter. These figures have challenged us to invoke a notion of queerness that is socially constructed, promiscuous, political, and discomfiting. They are the ghosts in our machine.</p>
      <p>Our hope is not to present a unified theory of what a queer operating system should be. Our goal is to continue to advance a theory of queerness as technological, operative, and systemic, derived from individual interests, mutual concern, and discussions that have emerged from collective presentations, virtual discussions, and queer dreams. It is to engage with the challenge of understanding queerness today as operating on and through digital media and the digital humanities. Our intervention therefore seeks to address what we perceive as a lack of queer, trans, and racial analysis in the digital humanities, as well as the challenges of imbricating queer/trans/racialized lives and building digital/technical architectures that do not replicate existing systems of oppression. As such, this is a speculative proposition for a technical project that does not yet exist and may never come to exist, a project that does not yet function and may never function. It is a response to the requirement that the digital humanities create working technologies. In lieu of tools, we offer up theoretical vaporware, speculative potentialware, ephemeral praxis.</p>
      <h2 id="ah0501" class="ah">Getting Started</h2>
      <p class="paft">QueerOS seeks to identify digital interactions, both intentional and serendipitous, that lead to new pleasures and possibilities both online and off. QueerOS imagines the pleasure and pain of queer digital mediations as practices that are inherently organizing and disorganizing at the same time. Focusing on computer code and system hardware, performance and production, communities of collaboration and social justice, and practices of desire and transformation within social media, QueerOS updates our current moment while also questioning our impulse to make queer theory productive and connect to the digital humanities and new media studies. QueerOS diverges from the digital network culture, widely accepted today, in which Terms of Service and License Agreements are quietly updated by corporations in order to limit user’s rights to their own data, where agreements are to be scrolled past and clicked through, and consent is not taken seriously. QueerOS demands that consensual agreements are the means by which we build new architectures of possibility and make our dreams of abundance real. By agreeing to the QueerOS Terms of Service the user binds themselves in a relational network of queer kinship with and between people and systems, bodies and objects, one and another.</p>
      <h2 id="ah0502" class="ah"><a id="p52" class="page"></a>Interface</h2>
      <p class="paft">The interface marks the site at which human-machine interaction is situated. For most users, the interface is the only means of engaging with a given operating system, as all possible actions are mediated by the predetermined interactions built into the system. The interface is therefore a site of control, of restriction; it is a black box that accepts limited input to produce limited output, the workings of which remain hidden. While our queer impulse may be to explode this box, to lay bare its inner workings in a gesture of radical revelation, this desire to access the truth of the machine in that hardware, those circuits, these gates and switches is rooted in a drive toward depth, essence, and resolution that is antithetical to a QueerOS. As such, a more productive interface would be expansive, proliferating the relationality allowed for by the inter-face, its inter-activity, its nature as that which is between or among, that which binds together, mutually or reciprocally. Far from the extractive impulse of contemporary systems that mine and surveil, it is an act of consent and mutual transformation. It is that which allows us to enter one another and be in-formed—that is, to be shaped from within (Peters).</p>
      <p>If there is an object to be exploded, it is perhaps the site at which the interface takes place, and those forms of action that qualify as legible to the operation of our system. While the interface once described the hermetic boundary at which two bodies meet (Chrystal), our modern computational interfaces are quite promiscuous, accepting and dispensing data between human and machine. Yet this modern interface is prophylactic, accepting only that which has been made hygienic through a translation from the material world into information. What might it mean to construct an interface with the capacity for co-constitutive modification, one modeled not on Shannon’s mathematical theory of communication (Shannon, 623–56), but on something disarticulated from Western epistemologies, something in which the parasite is not the excluded third (Serres) but is that which connects and transforms us, an infectious intimacy in which bodies are open to the transformation that arises from one to another?<a id="en49r" class="enref" href="ump-golddebates2016-0012.xhtml#en49">2</a> What would it mean for an interface to take self-modification as its ontological premise, such that interaction with an interface might transform both the user and the system?</p>
      <p>How would such an interface appear? Most modern interfaces take the form of a screen or surface that represents the internal actions of a computer, but that does not allow direct and unmediated access to it. While for decades the principal interface for most operating systems was the command line with its serial, linear, and deeply textual logic, it is the graphical user interface that now dominates our screens, structured by the logic of objects, layers, and surfaces. Both are premised on an existing media logic—the line, the grid, the frame—and both serve to distance and obfuscate the technology they mediate. Yet herein lies a double bind. While we might hope to do away with this distance by allowing for a relational, embodied, and transformative interface, the culmination of such a system is its own disappearance. <a id="p53" class="page"></a>As Alexander Galloway has argued, “The more intuitive a device becomes, the more it risks falling out of media altogether, becoming as naturalized as air or as common as dirt. To succeed, then, is at best self-deception and at worst self-annihilation” (Galloway, 25). Yet perhaps this is precisely our goal. A queer operating system might take as its premise an interface in which such distinctions are annihilated, in which the self is shattered such that the mediating skin of the interface disappears but is not naturalized, through which we might acknowledge the always already-mediated nature of our interactions as between and among one another.</p>
      <h2 id="ah0503" class="ah">User</h2>
      <p class="paft">To allow for proper functioning, the user offers their flesh to QueerOS.</p>
      <p>QueerOS rejects the body and yet requires it. It subverts synapses and digital conduits and yet luxuriates in excess, in electric demands, in “irreverent” and “aggressive aesthetic acts” that shatter both race binaries and RGB hexadecimal color coding (McMillan). Its activity log lies yawning and empty, waiting to be filled, because it is new, fresh, and still smells of soldered metal bits. The user may find that there are other bits and bytes here and there, left over from past operating systems, technological architecture poorly dismantled and unassimilated despite the flood of attention paid to the digital humanities as an academic field and political project. Black and blackened codes that linger, as Tara McPherson suggests, because they must and may, in fact, be desirable and desired (“Why Are the Digital Humanities So White?”).</p>
      <p>The user offers itself as victim, survivor, and creator of operating systems past. The user retains all ownership rights over the content it brings to the OS, but must disclose, in truth and reconciliation, where the content originated from. The OS will be liable for reconfiguring content generated by hierarchical ontological pasts; those rooted in slavery, settler-colonialism, prison and military industrial complexes will be targeted for special attention. The OS will be responsible for transposing such content, reordering vertical relations into horizontal, circular, reversible, retractable, prescient, and/or prophetic forms, writing code for programming that makes explicit and holds space for new forms. The user, in return, reserves the right and has absolute discretion to review the new order, demand reparation, display fragmentation, and modify future possibilities. Both user and OS agree there will be no finite in the OS. The OS will be emergent, transformative, and “not yet here” (Muñoz).</p>
      <p>The user will be provided with all available aesthetic and pseudonymous options. The user may invite others to the OS or break themselves into multiple users or avatars. There will be no limit on the number of avatars available to the user and each will retain the aforementioned rights to content. The OS will invite all to play and support play in all forms. Play, in fact, will be the dialogic mechanism for transposing content and creating new forms.</p>
      <p><a id="p54" class="page"></a>By offering its flesh to the OS, the user becomes one/multiple/nothing and binds itself in a contract with the OS. The user’s offer of flesh is irrevocable, nonexclusive, worldwide, perpetual, royalty-free, and sublicensable.</p>
      <h2 id="ah0504" class="ah">Kernel</h2>
      <p class="paft">The kernel manages I/O requests and translates them into processing for the central unit of the operating system. The kernel is fundamental to the proper functioning of QueerOS. While in a normative system the code of the kernel is loaded into a “protected area” of memory such that it may not be overwritten by applications and other used parts of the OS, the QueerOS kernel is merged with usable space to ensure its interference with the user. The system thus functions from this constant modality of interference and instability. The kernel is promiscuous by default.</p>
      <p>This frictional mode bears in mind Keeling’s suggestion that a QueerOS is neither interdisciplinary nor transdisciplinary. It is radically indifferent to existing disciplines “in an effort to include aspects of the world that have not yet entered the logics of disciplines” (Keeling, 154). Just as QueerOS does not move through or across disciplines, it likewise refuses the impulse to simply mine or extract the media of existing disciplines. In lieu of these predatory or essentializing formations, QueerOS articulates a para-disciplinary engagement. It demands we imagine otherwise.</p>
      <p>This orientation is not without its costs. What QueerOS gains from this refusal of legibility it pays for in its inherent instability. It is necessarily an unreliable system full of precarity, and thus reflects the condition of contemporary queer subjectivity. Yet this risk offers its own liberation from the confines of strict delineation.</p>
      <p>QueerOS thereby embraces uncertainty. It welcomes crashes.</p>
      <h2 id="ah0505" class="ah">Applications</h2>
      <p class="paft">Applications are a matter of doing and practice. They are bundled bits of code, algorithms, and interfaces, bound by logics of interaction, decision, and executability. A typical application serves to mobilize a computational device for a particular goal or result. Thus, there is a certain telos to the logic of the application, in that a particular application is used because one (already) knows that it will permit the achievement of a specific result, be it aesthetic or technical. QueerOS approaches applications as a question of critical design, driven by three major concerns:</p>
      <div class="list">
        <p class="nlf">1. The technical decisions made by humans that determine the functionality of an application, which are issues of standardization and delimitation</p>
        <p class="nl">2. The ways in which the application can be used</p>
        <p class="nll">3. The application’s milieu, which includes how the application is acquired and circulated in particular sociopolitical contexts</p>
      </div>
      <p class="pcon"><a id="p55" class="page"></a>Yet, the dominance of today’s search for “the killer app” is oriented only toward neoliberal convenience. Apps populate an ever-expanding global marketplace that promises to provide you with exactly what you want, when you want it—labor conditions be damned. Smartphone apps are perhaps the purest articulation of this impulse, offering services reliant on modes of exploitation.<a id="en50r" class="enref" href="ump-golddebates2016-0012.xhtml#en50">3</a> Apps are now a default mode in which to create solutions to a proliferation of social and political “problems,” from sex, food, and transport to weather, caloric intake, and banking. Evgeny Morozov has astutely diagnosed this turn as “solutionism,” a fundamental reliance on technologies and technological innovation to solve societal problems (Morozov). But killer apps give us solutions—the conveniences we never knew we wanted—by black-boxing not only their technics but also their politics. This is why certain explicitly political apps are banned from commercial circulation, such <i>Drones+</i>, an app that reported deaths from U.S. drone strikes, which Apple’s App Store blocked in 2012. In short, today’s apps emerge from an assemblage of technical, aesthetic, and social standards; that is, they are normalizations of contemporary digital culture.</p>
      <p>Applications in QueerOS are needed—even necessary—disidentifications with contemporary app culture. A QueerOS application is a political and subversive putting to use of the potentiality of the computer. QueerOS therefore proposes the following conditions for apps that wish to be accepted into its operating system:</p>
      <div class="list">
        <p class="nlf">1. Promiscuity: the ability to move and interact across platforms, devices, users, and geographical regions unrestricted. Promiscuity “concerns new ideas and new ways of doing things. . . . Sexual adventurousness gives birth to other forms of adventurousness—political, cultural, intellectual” (Dean, 5). QueerOS apps expand this sentiment to the technical.</p>
        <p class="nl">2. Process, not product: QueerOS apps are not black-boxed and they are not commodities; rather, they are collectively worked on, never in a state of completion.</p>
        <p class="nl">3. Failure: to be created without a telos of functionality. QueerOS apps refuse to operate through the governing norms and standards of neoliberal tech enterprises.</p>
        <p class="nl">4. Commons: contra the “app store” ethos driven by finance and conservative social investments, QueerOS apps exist in a space of free exchange, sharing, and open development.</p>
      </div>
      <h2 id="ah0506" class="ah">Memory</h2>
      <p class="paft">Memory is the mechanism by which the system can store data for later processing; it allows for a separation from the moment data is input into the system and the moment that it is later recalled and put to use. An archaeology of stored memory could be traced through a variety of media, but this mechanism of write-store-retrieve is <a id="p56" class="page"></a>precisely the hallmark of any processing system. It is this ability to regenerate data and information at a later time—the institution of a delay between writing and access—that signifies the capacity of a machine to <i>operate as an operator</i>. As Wendy Chun notes, the major characteristic of digital media is <i>memory</i>. “Its ontology is defined by memory, from content to purpose, from hardware to software, from CD-ROMs to memory sticks, from RAM to ROM” (Chun, 154).</p>
      <p>Memory is essential to the ability to operate a system beyond immediate calculation. It is memory that allows the user to build upon previous work, to continue the work done by a previous self, other selves, and future selves. Memory provides the continuity required to execute projects, but for QueerOS this function is not in the strict service of executability. Rather, it is about making visible the moment of potentiality—that is, what <i>could</i> be the result of this executed code, what happens if it is changed, reordered, or transformed? QueerOS understands memory as a site or event of becoming, rather than a site of assured calculation and determinacy. Following José Esteban Muñoz, QueerOS imagines memory as a site of utopian futurity where “utopia is not about simply achieving happiness or freedom [but] is in fact a casting of a picture of potentiality and possibility” (25). For QueerOS, memory continually invokes these conditional outcomes, the “negation of the present in lieu of another time or place” as well as the “projection forward” of memory, which is neither a guaranteed promissory note nor a nostalgic retrospection.</p>
      <p>The construction of personal and cultural memory has been a crucial concern of both queer genealogy and queer identity. How does one remember the absence of users who are long gone? The memory of QueerOS accounts for the ways in which users may encounter data that has been previously inscribed, even if this data is illegible or corrupted. The way we remember might be understood as a political and social gesture of identifying fleshy avatars and incoherent identities in all of their outrageous acts of resistance and love, and bringing them together through a form of data visceralization (Dobson). That said, QueerOS also recognizes the right of the user to be forgotten, erased, or made otherwise unmemorable.<a id="en51r" class="enref" href="ump-golddebates2016-0012.xhtml#en51">4</a></p>
      <p>For QueerOS, memory is not merely processing previously inscribed data, nor relying exclusively on predictive systems that route processing through the user’s habits and fantasies. Let the user be haunted by memory, whereby following Avery Gordon the process of haunting “raises specters, and it alters the experience of being in time, the way we separate the past, present and the future” (xvi). In QueerOS, users are haunted by the specter of their own memory, of their own utopian possibilities, of their own input, of the input of other users, and of their own processing habits. When the history of the operator is the history of the operating system, and the system of processing itself is not naturalized, but changing and changeable, dialogic and referential, the outline of a QueerOS comes into view.</p>
      <h2 id="ah0507" class="ah"><a id="p57" class="page"></a>I/O</h2>
      <p class="paft">To understand the input/output (I/O) features of QueerOS, one must ask, what is admitted and what is excluded from a concept such as QueerOS? What is included is a gesture toward queerness, queer embodiments, queer sexualities, and queer theory. One concern raised by QueerOS is that it may be a formation primarily grounded in queer theory, a body of theory that has proved to be incompatible in many ways with transgender hardware and software. While QueerOS is envisioned as a formation that includes transgender artwork and writing, the particular naming of this OS as “queer” may still reproduce a history of queer theory subsuming the experiences of transgender people, critiqued by many transgender theorists including Viviane Namaste, Eva Hayward, and Gayle Salamon. Namaste claims “the presentation of transgendered issues within queer theory does not account for the quotidian living conditions of transgendered people” (16), and this continues in the writing of queer theorists such as Judith Butler and Elizabeth Grosz. Media theory enacts a similar erasure, such as when Lisa Nakamura, in her book <i>Cybertypes</i>, groups together “online avatars, cosmetic and transgender surgeries and body modifications,” claiming “this kind of technology’s greatest promise to us is to eradicate otherness—a kind of better living through chemistry” (4). This claim denies the agency of transgender people to make their own medical decisions, claiming that their decisions are part of a process of eradicating gendered otherness, in a sense, claiming that transgender people are no longer trans after surgery, or they are eradicating themselves through surgery. Without specifically stating support for the agency of trans people, it is possible for media theory to erase the life and agency of trans people in the same way that queer theorists have. QueerOS has the potential to change this course.</p>
      <p>QueerOS is an operating system that is compatible with a broad range of existing devices, an I/O capability to receive and send data to and from outside of the confines of academic discourse. To support this kind of data I/O, bringing data in from “our realities,” QueerOS can be extended to reflect the ontologies of contemporary social formations such as queer and trans people of color, or QTPOC. Therefore, much like GNU/Linux was derived from Unix, we might branch the code of QueerOS and create a QTOS, or even a TQOS, as some activists have begun to reverse the linguistic placement of the queer and trans identities in order to emphasize the higher incidences of violence against trans people today, where many cisgender queer people have gained legal rights that provide degrees of safety and stability (Stallman).<a id="en52r" class="enref" href="ump-golddebates2016-0012.xhtml#en52">5</a></p>
      <p>If the primary function of an operating system is to manage resources such as hardware, software, memory, and applications, then the choice of metaphors for an operating system that would organize social formations is an incredibly delicate choice to make. Emerging formations such as QueerOS must not reproduce the <a id="p58" class="page"></a>mistakes of former social movements, such as feminism, which sought to include women of color and transgender people only after causing decades of harm to those groups. As such, this new OS must not place transgender lives in a subsumed position to queer people’s lives, or leave them as a kind of hardware to be added to the I/O stack in version 2.0.</p>
      <h2 id="ah0508" class="ah">Warning</h2>
      <p class="paft">Execution of this operating system is only possible if one takes into account the context in which a machine is situated: the resources available to it, the libraries it has access to, the support environment that allows for its manipulation, the compiler that translates from human to machine, the interpreter that performs the actions of code. In outlining those parts that constitute a QueerOS this User’s Manual offers just such a context, a topology of components that when arranged together create the possibility for the QueerOS to run, perform, glitch, crash, and reboot. This iterative failure offers no permanent solutions, only tactical interventions that strive toward a future, becoming a utility that assumes its own obsolescence but which may be refigured, rearranged, and executed once again.</p>
      <h3 id="bh0501" class="bh">Notes</h3>
      <div class="notes">
        <div class="endnote">
          <p class="en"><a id="en48" class="ennum" href="ump-golddebates2016-0012.xhtml#en48r">1.</a> We acknowledge that some of these features do not exist as part of present-day operating systems or terms of service. Nonetheless these concepts are repurposed here with performative and disruptive intent.</p>
        </div>
        <div class="endnote">
          <p class="en"><a id="en49" class="ennum" href="ump-golddebates2016-0012.xhtml#en49r">2.</a> We draw here on Elizabeth Povinelli’s work in <i>The Empire of Love,</i> in which she describes the infectious intimacy of the Emiyenggal-speaking indigenous people of northwestern Australia, whose social and familial relations are built on genealogies of contact and infection.</p>
        </div>
        <div class="endnote">
          <p class="en"><a id="en50" class="ennum" href="ump-golddebates2016-0012.xhtml#en50r">3.</a> For example, while Seamless and Uber provide food delivery and transportation, respectively, in major urban areas, they do so through economic inequality. Alternately, Grinder, a popular gay hook-up app, delivers a buffet-like selection of bodies to select for sex but also fosters racial and sexual discrimination.</p>
        </div>
        <div class="endnote">
          <p class="en"><a id="en51" class="ennum" href="ump-golddebates2016-0012.xhtml#en51r">4.</a> We refer here to the growing interest, particularly in Europe, in laws that allow for the right to be forgotten by technology. An example is European Union’s “Right to be Forgotten” Ruling (C-131/12), May 13, 2014. <a class="url" href="http://ec.europa.eu/justice/data-protection/files/factsheets/factsheet_data_protection_en.pdf">http://ec.europa.eu/justice/data-protection/files/factsheets/factsheet_data_protection_en.pdf</a>.</p>
        </div>
        <div class="endnote">
          <p class="en"><a id="en52" class="ennum" href="ump-golddebates2016-0012.xhtml#en52r">5.</a> A QTPOCOS may be another important branching of the code, but as QueerOS has already been defined to consider race as a central organizing principle, a shorter acronym seems acceptable. While gender is also addressed as central, gender can still be read to elide or erase people who are transgender without more specific effort being made.</p>
        </div>
      </div>
      <h3 id="bh0502" class="bh"><a id="p59" class="page"></a>Bibliography</h3>
      <div class="references">
        <p class="rf">Chrystal, George. <i>Encyclopedia Britannica.</i> Vol. XV. Edinburgh: A &#x26; C Black, 1883: 264/1.</p>
        <p class="rf">Chun, Wendy. “The Enduring Ephemeral, or the Future Is a Memory.” <i>Critical Inquiry</i> 35 (Autumn 2008): 148–71.</p>
        <p class="rf">Dean, Tim. <i>Unlimited Intimacy: Reflections on the Subculture of Barebacking.</i> Chicago: University of Chicago Press, 2009.</p>
        <p class="rf">Dobson, Kelly. “Machine Therapy: Subtle Machines and Data Visceralization.” <i>Data Visceralization Research Group,</i> Rhode Island School of Design, April 23, 2015.</p>
        <p class="rf">Galloway, Alexander. <i>The Interface Effect.</i> Cambridge: Polity, 2012.</p>
        <p class="rf">Gordon, Avery. <i>Ghostly Matters: Haunting and the Sociological Imagination.</i> Minneapolis: University of Minneapolis Press, 2008.</p>
        <p class="rf">Keeling, Kara. “Queer OS.” <i>Cinema Journal</i> 53, no. 2 (2014): 152–57.</p>
        <p class="rf">McMillan, Uri. “Nicki-Aesthetics: The Camp Performance of Nicki Minaj.” <i>Women &#x26; Performance: A Journal of Feminist Theory</i> 24, no. 1 (January 2, 2014): 79–87.</p>
        <p class="rf">McPherson, Tara, “U.S. Operating Systems at Mid-Century: The Intertwining of Race and UNIX.” In <i>Race after the Internet,</i> ed. Lisa Nakamura and Peter A. Chow-White, 21–37. New York: Routledge, 2012.</p>
        <p class="rf">—. “Why Are the Digital Humanities So White? or Thinking the Histories of Race and Computation.” In <i>Debates in the Digital Humanities,</i> ed. Matthew K. Gold, 139–60. Minneapolis: University of Minnesota Press, 2012.</p>
        <p class="rf">Morozov, Evgeny. <i>To Save Everything, Click Here: The Folly of Technological Solutionism.</i> New York: PublicAffairs, 2014.</p>
        <p class="rf">Muñoz, José Esteban. <i>Cruising Utopia: The Then and There of Queer Futurity.</i> New York: NYU Press, 2009.</p>
        <p class="rf">Nakamura, Lisa. <i>Cybertypes: Race, Ethnicity, and Identity on the Internet.</i> New York: Routledge, 2002.</p>
        <p class="rf">Namaste, Viviane K. <i>Invisible Lives: The Erasure of Transsexual and Transgendered People.</i> Chicago: University of Chicago Press, 2000.</p>
        <p class="rf">Peters, John Durham. “Information: Notes toward a Critical History.” <i>Journal of Communication Inquiry</i> 12, no. 2 (July 1988): 9–23.</p>
        <p class="rf">Povinelli, Elizabeth. <i>The Empire of Love: Toward a Theory of Intimacy, Genealogy, and Carnality.</i> Durham, N.C.: Duke University Press, 2006.</p>
        <p class="rf">Serres, Michel. <i>The Parasite.</i> Minneapolis: University of Minnesota Press, 2007.</p>
        <p class="rf">Shannon, Claude E. “A Mathematical Theory of Communication.” In <i>The Bell System Technical Journal</i> 27 (July, October 1948): 379–23, 623–56.</p>
        <p class="rf">Stallman, Richard. “Linux and the GNU System,” September 22, 2014. <a class="url" href="https://www.gnu.org/gnu/linux-and-gnu.html">https://www.gnu.org/gnu/linux-and-gnu.html</a>.</p>
      </div>
    </div>
  </body>
</html>